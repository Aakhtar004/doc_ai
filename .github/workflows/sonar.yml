name: SonarQube Analysis and Node.js CI
env:
  NODE_VERSION: '22.x'                     # la versión de Node.js
  SONAR_ORG: 'docaisc'                     # Nombre de la organización de sonar cloud
  SONAR_PROJECT: 'docaisc_docaipy'         # Key ID del proyecto de sonar (actualizado para tu proyecto)
on:
  push:
    branches: [ "main" ] 
  workflow_dispatch:

jobs:
  sonarqube:
    name: SonarQube Analysis and Node.js Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Instalar dependencias
        run: npm ci
      
      - name: Ejecutar pruebas con cobertura
        run: |
          npm test -- --coverage --watchAll=false || echo "No tests configured yet"
        continue-on-error: true
      
      - name: Ejecutar ESLint para análisis estático
        run: |
          npx eslint . --ext .js,.mjs,.cjs --format json --output-file eslint-report.json || echo "ESLint analysis completed"
        continue-on-error: true
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT }}
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/Documents/**,**/public/**,**/*.md,**/.github/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.eslint.reportPaths=eslint-report.json
      
      - name: Compilar aplicación
        run: |
          npm run build || echo "No build script configured"
        continue-on-error: true
      
      - name: Crear artefacto de despliegue
        run: |
          mkdir -p ./artifacts
          # Crear un tar excluyendo directorios problemáticos
          tar --exclude='./node_modules' \
              --exclude='./.git' \
              --exclude='./artifacts' \
              --exclude='./coverage' \
              --exclude='./.nyc_output' \
              -cf - . | (cd ./artifacts && tar -xf -)
      
      - name: Subir artefactos
        uses: actions/upload-artifact@v4
        with:
          name: docugen-ai-build
          path: ./artifacts